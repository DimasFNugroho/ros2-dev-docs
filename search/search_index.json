{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ROS2 Docker Development Environment with MkDocs Overview This guide covers how to set up a containerized ROS2 development environment using Docker, document it with MkDocs, and deploy the documentation to GitHub Pages. Step 1: Install Docker Install Docker from the official site: https://docs.docker.com/get-docker/ Verify installation: docker --version Start Docker: sudo systemctl start docker Enable Docker to start on boot: sudo systemctl enable docker Step 2: Set Up a ROS2 Docker Container 2.1. Create a Dockerfile Create a new project folder and add a Dockerfile : mkdir ros2_dev cd ros2_dev nano Dockerfile Example Dockerfile : FROM osrf/ros:galactic-desktop ENV LANG=C.UTF-8 ENV LC_ALL=C.UTF-8 ENV ROS_DISTRO=galactic RUN apt-get update && apt-get install -y \\ python3-pip \\ python3-colcon-common-extensions \\ build-essential \\ ros-$ROS_DISTRO-rclpy \\ ros-$ROS_DISTRO-demo-nodes-cpp RUN mkdir -p /ros2_ws/src WORKDIR /ros2_ws RUN git clone https://github.com/ros2/demos src/demos RUN source /opt/ros/$ROS_DISTRO/setup.bash && colcon build CMD [\"bash\", \"-c\", \"source /opt/ros/$ROS_DISTRO/setup.bash && bash\"] 2.2. Build the Docker Container docker build -t ros2-dev . 2.3. Run the Docker Container docker run --name ros2_container -it --rm --net=host --privileged \\ -v /dev:/dev \\ -v $(pwd):/ros2_ws \\ ros2-dev 2.4. Fix Container Name Conflicts Check for existing containers: docker ps -a If the container name already exists: - Remove the container: docker rm ros2_container Or rename it: docker rename ros2_container ros2_container_old Or restart it: docker start -ai ros2_container 2.5. Test the ROS2 Setup In the container: source /opt/ros/galactic/setup.bash ros2 run demo_nodes_cpp talker Open a new terminal and attach to the container: docker exec -it ros2_container bash source /opt/ros/galactic/setup.bash ros2 run demo_nodes_cpp listener Step 3: Create an MkDocs Project 3.1. Install MkDocs pip install mkdocs 3.2. Create a New MkDocs Project mkdocs new docs cd docs 3.3. Edit index.md # ROS2 Docker Setup Guide Welcome to the ROS2 Docker Setup Guide. 3.4. Test the MkDocs Site Locally mkdocs serve Open your browser to: - http://127.0.0.1:8000 Step 4: Push to GitHub 4.1. Add GitHub Remote Using Personal Access Token Create a Personal Access Token in GitHub Set remote: git remote add origin https://<your-token>@github.com/your-username/ros2-dev-docs.git Push to GitHub: git push -u origin main 4.2. (Optional) Use SSH Instead of HTTPS Create SSH key: ssh-keygen -t ed25519 Add to GitHub \u2192 Settings \u2192 SSH and GPG Keys Set remote: git remote set-url origin git@github.com:your-username/ros2-dev-docs.git Step 5: Deploy with GitHub Pages Deploy site: mkdocs gh-deploy Enable GitHub Pages in repo settings. Site will be available at: https://your-username.github.io/ros2-dev-docs \u2705 Summary Checklist \u2705 Docker container with ROS2 \u2192 \u2705 \u2705 MkDocs site \u2192 \u2705 \u2705 GitHub authentication \u2192 \u2705 \u2705 GitHub Pages deployment \u2192 \u2705 \ud83c\udf89 Done! \ud83c\udfaf","title":"ROS2 Docker Development Environment with MkDocs"},{"location":"#ros2-docker-development-environment-with-mkdocs","text":"","title":"ROS2 Docker Development Environment with MkDocs"},{"location":"#overview","text":"This guide covers how to set up a containerized ROS2 development environment using Docker, document it with MkDocs, and deploy the documentation to GitHub Pages.","title":"Overview"},{"location":"#step-1-install-docker","text":"Install Docker from the official site: https://docs.docker.com/get-docker/ Verify installation: docker --version Start Docker: sudo systemctl start docker Enable Docker to start on boot: sudo systemctl enable docker","title":"Step 1: Install Docker"},{"location":"#step-2-set-up-a-ros2-docker-container","text":"","title":"Step 2: Set Up a ROS2 Docker Container"},{"location":"#21-create-a-dockerfile","text":"Create a new project folder and add a Dockerfile : mkdir ros2_dev cd ros2_dev nano Dockerfile Example Dockerfile : FROM osrf/ros:galactic-desktop ENV LANG=C.UTF-8 ENV LC_ALL=C.UTF-8 ENV ROS_DISTRO=galactic RUN apt-get update && apt-get install -y \\ python3-pip \\ python3-colcon-common-extensions \\ build-essential \\ ros-$ROS_DISTRO-rclpy \\ ros-$ROS_DISTRO-demo-nodes-cpp RUN mkdir -p /ros2_ws/src WORKDIR /ros2_ws RUN git clone https://github.com/ros2/demos src/demos RUN source /opt/ros/$ROS_DISTRO/setup.bash && colcon build CMD [\"bash\", \"-c\", \"source /opt/ros/$ROS_DISTRO/setup.bash && bash\"]","title":"2.1. Create a Dockerfile"},{"location":"#22-build-the-docker-container","text":"docker build -t ros2-dev .","title":"2.2. Build the Docker Container"},{"location":"#23-run-the-docker-container","text":"docker run --name ros2_container -it --rm --net=host --privileged \\ -v /dev:/dev \\ -v $(pwd):/ros2_ws \\ ros2-dev","title":"2.3. Run the Docker Container"},{"location":"#24-fix-container-name-conflicts","text":"Check for existing containers: docker ps -a If the container name already exists: - Remove the container: docker rm ros2_container Or rename it: docker rename ros2_container ros2_container_old Or restart it: docker start -ai ros2_container","title":"2.4. Fix Container Name Conflicts"},{"location":"#25-test-the-ros2-setup","text":"In the container: source /opt/ros/galactic/setup.bash ros2 run demo_nodes_cpp talker Open a new terminal and attach to the container: docker exec -it ros2_container bash source /opt/ros/galactic/setup.bash ros2 run demo_nodes_cpp listener","title":"2.5. Test the ROS2 Setup"},{"location":"#step-3-create-an-mkdocs-project","text":"","title":"Step 3: Create an MkDocs Project"},{"location":"#31-install-mkdocs","text":"pip install mkdocs","title":"3.1. Install MkDocs"},{"location":"#32-create-a-new-mkdocs-project","text":"mkdocs new docs cd docs","title":"3.2. Create a New MkDocs Project"},{"location":"#33-edit-indexmd","text":"# ROS2 Docker Setup Guide Welcome to the ROS2 Docker Setup Guide.","title":"3.3. Edit index.md"},{"location":"#34-test-the-mkdocs-site-locally","text":"mkdocs serve Open your browser to: - http://127.0.0.1:8000","title":"3.4. Test the MkDocs Site Locally"},{"location":"#step-4-push-to-github","text":"","title":"Step 4: Push to GitHub"},{"location":"#41-add-github-remote-using-personal-access-token","text":"Create a Personal Access Token in GitHub Set remote: git remote add origin https://<your-token>@github.com/your-username/ros2-dev-docs.git Push to GitHub: git push -u origin main","title":"4.1. Add GitHub Remote Using Personal Access Token"},{"location":"#42-optional-use-ssh-instead-of-https","text":"Create SSH key: ssh-keygen -t ed25519 Add to GitHub \u2192 Settings \u2192 SSH and GPG Keys Set remote: git remote set-url origin git@github.com:your-username/ros2-dev-docs.git","title":"4.2. (Optional) Use SSH Instead of HTTPS"},{"location":"#step-5-deploy-with-github-pages","text":"Deploy site: mkdocs gh-deploy Enable GitHub Pages in repo settings. Site will be available at: https://your-username.github.io/ros2-dev-docs","title":"Step 5: Deploy with GitHub Pages"},{"location":"#summary-checklist","text":"\u2705 Docker container with ROS2 \u2192 \u2705 \u2705 MkDocs site \u2192 \u2705 \u2705 GitHub authentication \u2192 \u2705 \u2705 GitHub Pages deployment \u2192 \u2705","title":"\u2705 Summary Checklist"},{"location":"#done","text":"","title":"\ud83c\udf89 Done! \ud83c\udfaf"}]}